//#domain
//cpp imports here
//#enddomain

COMPILER Zoso

    // int plus, minus, times, slash, equals, lessThan, greaterThan, assign; // Operators
    // int integer, boolean; // types
    // int var, function; //Object Kinds


    // int ADD, SUB, MUL, DIV, EQU, LSS, GTR, ASSIGN; // operation codes

    // void InitDeclarations() {
    //     plus = 0, minus = 1, times = 2, slash = 3, equals = 4, lessThan = 5, greaterThan = 6, assign = 7
    //     integer = 1, boolean = 2;
    //     var = 0, function = 1;

    //     // Operational Codes
    //     ADD = 0, SUB = 1, MUL = 2, DIV = 3, EQU = 4, LSS = 5, GTR = 6, ASSIGN = 7;
    // }
    // SymbolTable *symbolTable;

CHARACTERS
    letter = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
    digit = "0123456789".
    quote = '\"'.
    cr  = '\r'.
    lf  = '\n'.
    tab = '\t'.
    space = ' '.

TOKENS
    number = digit { digit }.
    ident = letter { letter | digit }.
    string = quote { letter | digit } quote.

IGNORE cr + lf + tab + space

PRODUCTIONS
    // Id <wchar* &name> = 
    //     ident (. name = coco_string_create(t -> val); .)
    // .

    AddOp = '+' | '-'.

    MulOp = '*' | '/'.

    VariableDeclaration = ("void" | "float" | "int") ':' ident {',' ident} ';'.

    FunctionDeclaration = "function" ("void" | "float" | "int") ':' ident '(' { VariableDeclaration } ')' '{' // pass variables
        { Statement }
        '}'
    .
    
    Statement =
        "print" '(' { Expr | SimExpr | string } ')' ';' 
        | Expr ';'
        | FunctionDeclaration
        | VariableDeclaration
    .

    Expr = 
        SimExpr [ ( "==" | '<' | '>' ) SimExpr].

    SimExpr = 
        Term {AddOp Term}.

    Term =
        Factor {MulOp Factor}.

    Factor =
        number 
        | ident
        | '(' Expr ')' 
        | AddOp Factor
    .

    Zoso = "Program" '{' 
        { Statement }
        '}'.
END Zoso.

/*-------------------

TODO:
function call
variable assignation

-----------------------------------------------------*/
